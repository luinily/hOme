//
//  CreateDeviceConfigurator.swift
//  hOme
//
//  Created by Coldefy Yoann on 2016/05/21.
//  Copyright (c) 2016å¹´ YoannColdefy. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: Connect View, Interactor, and Presenter

extension CreateDeviceViewController: CreateDevicePresenterOutput {
	override func prepare(for segue: UIStoryboardSegue, sender: AnyObject?) {
		router.passDataToNextScene(segue)
	}
}

extension CreateDeviceInteractor: CreateDeviceViewControllerOutput {
}

extension CreateDevicePresenter: CreateDeviceInteractorOutput {
}

class CreateDeviceConfigurator {
	// MARK: Object lifecycle
	
	class var sharedInstance: CreateDeviceConfigurator {
		struct Static {
			static var instance = CreateDeviceConfigurator()
			static var token: Int = 0
		}
		return Static.instance
	}
	
	// MARK: Configuration
	
	func configure(_ viewController: CreateDeviceViewController) {
		let router = CreateDeviceRouter()
		router.viewController = viewController
		
		let presenter = CreateDevicePresenter()
		presenter.output = viewController
		
		let interactor = CreateDeviceInteractor()
		interactor.output = presenter
		
		viewController.output = interactor
		viewController.router = router
	}
}
