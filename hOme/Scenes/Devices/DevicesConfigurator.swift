//
//  DevicesConfigurator.swift
//  hOme
//
//  Created by Coldefy Yoann on 2016/05/29.
//  Copyright (c) 2016å¹´ YoannColdefy. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: Connect View, Interactor, and Presenter

class DevicesConfigurator {

	// MARK: Object lifecycle
	
	class var sharedInstance: DevicesConfigurator {
		struct Static {
			static var instance = DevicesConfigurator()
			static var token: Int = 0
		}
		return Static.instance
	}
	
	// MARK: Configuration
	
	func configure(_ viewController: DevicesViewController) {
		let router = DevicesRouter()
		router.viewController = viewController
		
		let presenter = DevicesPresenter()
		presenter.output = viewController
		
		let interactor = DevicesInteractor()
		interactor.output = presenter
		
		viewController.output = interactor
		viewController.router = router
	}
}

extension DevicesInteractor: DevicesViewControllerOutput {
}

extension DevicesPresenter: DevicesInteractorOutput {
}

//extension DevicesViewController: DevicesPresenterOutput {
//	override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
//		router.passDataToNextScene(segue)
//	}
//}
