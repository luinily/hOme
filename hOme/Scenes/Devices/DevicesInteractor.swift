//
//  DevicesInteractor.swift
//  hOme
//
//  Created by Coldefy Yoann on 2016/05/29.
//  Copyright (c) 2016å¹´ YoannColdefy. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol DevicesInteractorInput {
	func fetchDevices(_ request: Devices_FetchDevices_Request)
}

protocol DevicesInteractorOutput {
	func presentFetchedDevices(_ response: Devices_FetchedDevices_Response)
}

class DevicesInteractor: DevicesInteractorInput {
	var output: DevicesInteractorOutput!
	var worker: DevicesWorker = DevicesWorker(deviceStore: DeviceCloudKitStore())
	
	// MARK: Business logic
	
//	func doSomething(request: DevicesRequest) {
//		// NOTE: Create some Worker to do the work
//		
//		worker = DevicesWorker()
//		worker.doSomeWork()
//		
//		// NOTE: Pass the result to the Presenter
//		
//		let response = DevicesResponse()
//		output.presentSomething(response)
//	}
	
	func fetchDevices(_ request: Devices_FetchDevices_Request) {
		worker.fetchDevices() {
			devices in
			let response = Devices_FetchedDevices_Response(devices: devices)
			self.output.presentFetchedDevices(response)
		}
	}
}
