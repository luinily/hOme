//
//  DevicesPresenter.swift
//  hOme
//
//  Created by Coldefy Yoann on 2016/05/29.
//  Copyright (c) 2016å¹´ YoannColdefy. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol DevicesPresenterInput {
	func presentFetchedDevices(response: Devices_FetchedDevices_Response)
}

protocol DevicesPresenterOutput: class {
	func displayFetchedDevices(viewModel: Devices_FetchDevices_ViewModel)
	func presentDeviceDeleted(viewModel: Devices_Devicedeleted_ViewModel)
}

class DevicesPresenter: DevicesPresenterInput {
	weak var output: DevicesPresenterOutput!
	
	// MARK: Presentation logic
	
	func presentFetchedDevices(response: Devices_FetchedDevices_Response) {
		let displayedDevices = makeDisplayDevices(devices: response.devices)
		let viewModel = Devices_FetchDevices_ViewModel(displayedDevices: displayedDevices)
		output.displayFetchedDevices(viewModel: viewModel)
	}
	
	private func makeDisplayDevice(device: DeviceInfo) -> DisplayDevice {
		let name = device.name.name
		let internalName = device.name.internalName
		let displayDevice = DisplayDevice(internalName: internalName, name: name)
		return displayDevice
	}
	
	private func makeDisplayDevices(devices: [DeviceInfo]) -> [DisplayDevice] {
		var displayedDevices = [DisplayDevice]()
		for device in devices {
			let displayDevice = makeDisplayDevice(device: device)
			displayedDevices.append(displayDevice)
		}
		return displayedDevices
	}
	
	func presentDeviceDeleted(response: Devices_DeviceDeleted_Response) {
		let displayedDevices = makeDisplayDevices(devices: response.devices)
		
		let viewModel: Devices_Devicedeleted_ViewModel
		if response.deviceDeleted {
			viewModel = Devices_Devicedeleted_ViewModel(remainingDevicesAfterDeletion: displayedDevices)
		} else {
			viewModel = Devices_Devicedeleted_ViewModel(couldNotDeleteDeviceErrorMessage: "Could not delete device")
		}
		output.presentDeviceDeleted(viewModel: viewModel)
	}
}
