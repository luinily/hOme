//
//  DevicesViewControllerTests.swift
//  hOme
//
//  Created by Coldefy Yoann on 2016/05/29.
//  Copyright (c) 2016å¹´ YoannColdefy. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import XCTest
@testable import hOme

extension UIViewController {
	//this is here to allow the view to be loaded and testable
	func preloadView() {
		let _ = view
	}
}

class DevicesViewControllerTests: XCTestCase {
	// MARK: Subject under test
	
	var sut: DevicesViewController?
	var window: UIWindow!
	
	// MARK: Test lifecycle
	
	override func setUp() {
		super.setUp()
		window = UIWindow()
		setupDevicesViewController()
	}
	
	override func tearDown() {
		window = nil
		super.tearDown()
	}
	
	// MARK: Test setup
	
	func setupDevicesViewController() {
		let bundle = NSBundle.mainBundle()
		let storyboard = UIStoryboard(name: "Main", bundle: bundle)
		sut = storyboard.instantiateViewControllerWithIdentifier("DevicesViewController") as? DevicesViewController
	}
	
	func loadView() {
		if let viewController = sut {
			window.addSubview(viewController.view)
			viewController.preloadView()
		}
//		NSRunLoop.currentRunLoop().runUntilDate(NSDate())
	}
	
	
	// MARK: Test doubles
	
	class DevicesViewControllerOutputSpy: DevicesViewControllerOutput {
		var fetchDevicesCalled = false
		
		func fetchDevices(request: Devices_FetchDevices_Request) {
			fetchDevicesCalled = true
		}
	}

	// MARK: Tests
	
	func testShouldetchDevicesWhenViewIsLoaded() {
		if let viewController = sut {
			// Given
			let devicesViewControllerOutputSpy = DevicesViewControllerOutputSpy()
			viewController.output = devicesViewControllerOutputSpy
			
			// When
			loadView()
			
			// Then
			XCTAssertTrue(devicesViewControllerOutputSpy.fetchDevicesCalled, "devices should be fetched")
		}
	}
}
